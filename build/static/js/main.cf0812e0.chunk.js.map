{"version":3,"sources":["components/PersonForm.js","components/PersonPuh.js","components/PhonenumberList.js","services/Personremote.js","index.js"],"names":["PersonForm","incrementP","name","nameChange","phnumber","phnumberChange","onSubmit","value","onChange","type","PersonPuh","person","removePerson","number","onClick","PhonenumberList","persons","allpersons","map","key","id","axios","get","newperson","post","delete","ReactDOM","render","useState","setPersons","newName","setNewName","newPhoneNumber","setnewPhoneNumber","infomessage","setInfo","useEffect","Personremote","then","response","data","mgsuser","className","event","preventDefault","filter","length","alert","concat","setTimeout","target","console","log","find","p","window","confirm","document","getElementById"],"mappings":"+NA0CiBA,EAvCI,SAAC,GAA0D,IAAzDC,EAAwD,EAAxDA,WAAWC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,eAEzD,OAEO,6BACH,0BAAOC,SAAUL,GAEjB,qCAEA,2BACEM,MAAOL,EACPM,SAAUL,KAKZ,uCAEA,2BACEI,MAAOH,EACPI,SAAUH,KAIZ,6BACE,4BAAQI,KAAK,UAAb,WCVOC,EAbK,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,aAE3B,OACI,oCAEE,2BAAID,EAAOT,KAAMS,EAAOE,OAAxB,IAAgC,4BAAQC,QAASF,GAAjB,qBCUnBG,EAfK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAAQJ,EAAkB,EAAlBA,aAG1BK,EAAaD,EAAQE,KAAI,SAAAP,GAAM,OAEjC,kBAAC,EAAD,CAAWQ,IAAKR,EAAOT,KAAMS,OAAQA,EAAQC,aAAc,kBAAMA,EAAaD,EAAOS,UAGrF,OACE,oCACEH,I,gBCGK,EAfE,WACf,OAAOI,IAAMC,IAHC,iBAiBD,EAXO,SAAAC,GACpB,OAAOF,IAAMG,KAPC,eAOeD,IAUhB,EANM,SAAAH,GAGnB,OAAOC,IAAMI,OAAN,UAdO,eAcP,YAA6BL,GAAMA,I,MCwI9CM,IAASC,OAAO,mBA7IJ,WAAO,IAAD,EAIeC,mBAAS,IAJxB,mBAIRZ,EAJQ,KAICa,EAJD,OAQgBD,mBAAS,IARzB,mBAQRE,EARQ,KAQCC,EARD,OAS8BH,mBAAS,IATvC,mBASRI,EATQ,KASQC,EATR,OAUeL,mBAAS,IAVxB,mBAUTM,EAVS,KAUIC,EAVJ,KA2BhBC,qBAAU,WAGRC,IAEGC,MAAK,SAAAC,GAEJV,EAAWU,EAASC,WAEvB,IAmFH,OACE,6BACE,yCAGA,mBAhHmB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAExB,MAAgB,KAAZA,EACK,GAIP,uBAAGC,UAAU,QACVD,KAwGH,CAAgBA,QAASP,IAEzB,kBAAC,EAAD,CAAYjC,WA5EK,SAAC0C,IACpBA,EAAMC,iBAGC5B,EAAQ6B,QAAO,SAAAlC,GAAM,OAAIA,EAAOT,OAAS4B,KAASgB,OAAS,GA6B9DC,MAAM,GAAD,OAAIjB,EAAJ,uBAlBLO,EAN0B,CACtBnC,KAAM4B,EACNjB,OAAQmB,IAMPM,MAAK,SAAAC,GACJV,EAAWb,EAAQgC,OAAOT,EAASC,OACnCT,EAAW,IACXE,EAAkB,IAClBE,EAAQ,SAAD,OAAUL,IAEjBmB,YAAW,WACTd,EAAQ,MACP,SAmD2BjC,KAAM4B,EAAS3B,WAvFjC,SAACwC,GAEvBZ,EAAWY,EAAMO,OAAO3C,QAsFpBH,SAAU4B,EAAgB3B,eAlFN,SAACsC,GACzBQ,QAAQC,IAAIT,EAAMO,OAAO3C,OACzB0B,EAAkBU,EAAMO,OAAO3C,UAoF7B,uCAEA,kBAAC,EAAD,CAAiBS,QAASA,EAASJ,aA9ClB,SAAAQ,GAGnB,IAAMT,EAASK,EAAQqC,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAEvCmC,OAAOC,QAAP,uCAA+C7C,EAAOT,QAEvDmC,EACYjB,GACbkB,MAAK,SAAAC,GAGJV,EAAWb,EAAQ6B,QAAO,SAAAS,GAAC,OAAIA,EAAElC,KAAOA,MACxCW,EAAW,IACXE,EAAkB,IAElBE,EAAQ,WAAD,OAAYxB,EAAOT,OAElB+C,YAAW,WACTd,EAAQ,MACP,cAkCD,MAASsB,SAASC,eAAe,W","file":"static/js/main.cf0812e0.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nconst PersonForm   = ({incrementP,name,nameChange,phnumber,phnumberChange}) => {\r\n\r\n  return (\r\n\r\n         <div>\r\n      <form  onSubmit={incrementP}>\r\n      \r\n      <div>\r\n        name: \r\n      <input\r\n        value={name} \r\n        onChange={nameChange}\r\n        />\r\n      </div>\r\n\r\n\r\n      <div>\r\n        number: \r\n      <input\r\n        value={phnumber} \r\n        onChange={phnumberChange}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n\r\n  \r\n    </form>\r\n\r\n\r\n\r\n      </div>\r\n      \r\n    )\r\n\r\n}\r\n\r\n  export default PersonForm;","\r\n\r\nimport React from 'react'\r\n\r\n\r\nconst PersonPuh   = ({person,removePerson}) => {\r\n\r\n  return (\r\n      <>\r\n        \r\n        <p>{person.name}{person.number} <button onClick={removePerson}>Remove contact</button></p>\r\n        \r\n      </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PersonPuh;","\r\n\r\nimport React from 'react'\r\nimport PersonPuh from './PersonPuh'\r\n\r\nconst PhonenumberList   = ({persons,removePerson}) => {\r\n\r\n   \r\n    const allpersons = persons.map(person =>  \r\n        \r\n        <PersonPuh key={person.name} person={person} removePerson={() => removePerson(person.id)}/> \r\n    \r\n      )  \r\n        return (\r\n          <>\r\n           {allpersons}\r\n          </>\r\n        )\r\n      }\r\n\r\n      export default PhonenumberList;","import axios from 'axios'\r\nconst remoteURL = '/app/Persons'\r\n\r\nconst getPersons = () => {\r\n    return axios.get(remoteURL)\r\n  }\r\n\r\n  const postNewPerson = newperson => {\r\n    return axios.post(remoteURL, newperson)\r\n  }\r\n\r\n\r\n  const removePerson = id => {\r\n\r\n\r\n    return axios.delete(`${remoteURL}/${id}`, id)\r\n  }\r\n  \r\n  export default { \r\n    getPersons: getPersons, \r\n    postNewPerson: postNewPerson,\r\n    removePerson: removePerson\r\n  }","import React, { useState,useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport PersonForm from './components/PersonForm'\nimport PhonenumberList from './components/PhonenumberList'\n\nimport Personremote from './services/Personremote'\nimport './index.css'\n\n\n\nconst App = () => {\n\n  \n\n  const [ persons, setPersons] = useState([])\n\n\n  \n  const [ newName, setNewName ] = useState('')\n  const [ newPhoneNumber, setnewPhoneNumber ] = useState('')\n  const [infomessage, setInfo] = useState('')\n\n  const ActionMessages = ({ mgsuser }) => {\n\t\n    if (mgsuser === '') {\n      return ''\n    }\n  \n    return (\n      <p className=\"info\">\n        {mgsuser}\n      </p>\n    )\n    \n    \n  }\n\n  useEffect(() => {\n\n   \n    Personremote\n      .getPersons()\n      .then(response => {\n    \n        setPersons(response.data)\n      })\n  }, [])\n \n\n  const nameInputChange = (event) => {\n    \n    setNewName(event.target.value)\n    \n  }\n\n  const PhoneNumberChange = (event) => {\n    console.log(event.target.value)\n    setnewPhoneNumber(event.target.value)\n  }\n\n  const incNewPerson = (event) => {\n    event.preventDefault()\n    var exists\n\n    exists=persons.filter(person => person.name === newName).length > 0\n\n   \n\n    if(!exists) {\n        const personPhoneNumber = {\n            name: newName,\n            number: newPhoneNumber\n        }\n\n      \n        Personremote\n            .postNewPerson(personPhoneNumber)\n            .then(response => {\n              setPersons(persons.concat(response.data))\n              setNewName('')\n              setnewPhoneNumber('')\n              setInfo(`Added ${newName}`)\n              \n              setTimeout(() => {\n                setInfo('')\n              }, 2000)\n\n\n            })\n\n       \n    }\n    else {\n        alert(`${newName} is already in use`)\n    }\n  }\n\n  const removePerson = id => {\n\n    \n    const person = persons.find(p => p.id === id)\n\n    if(window.confirm(`Do you really want to remove ${person.name}`))\n    {\n      Personremote\n    .removePerson(id)\n    .then(response => {\n      \n      \n      setPersons(persons.filter(p => p.id !== id))\n      setNewName('')\n      setnewPhoneNumber('')\n\n      setInfo(`Removed ${person.name}`)\n              \n              setTimeout(() => {\n                setInfo('')\n              }, 2000)\n\n\n    })\n    \n    }\n  \n    \n   \n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n\n      <ActionMessages mgsuser={infomessage}/>\n\n      <PersonForm incrementP={incNewPerson} name={newName} nameChange={nameInputChange} \n        phnumber={newPhoneNumber} phnumberChange={PhoneNumberChange} />\n\n      \n\n      <h2>Numbers</h2>\n\n      <PhonenumberList persons={persons} removePerson={removePerson}/>\n\n    </div>\n  )\n\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}